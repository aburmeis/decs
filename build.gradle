apply plugin: 'propdeps'
apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'jacoco'

ext {
    slf4jVersion = '1.7.12'
    branch = getBranch()
    buildType = getBuildType(branch)
}

sourceCompatibility = 1.8
version = "${majorVersion}.${minorVersion}.${patchVersion}-${buildType}"
jacoco.toolVersion = '0.7.4.201502262128'

repositories {
    jcenter()
}

buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.6'
    }
}

dependencies {

    compile "org.slf4j:slf4j-api:${slf4jVersion}"

    testCompile 'junit:junit:4.12',
        'com.tngtech.java:junit-dataprovider:1.10.1',
        'org.hamcrest:hamcrest-all:1.3',
        'org.mockito:mockito-all:1.10.19'
}

javadoc {
    options.memberLevel = 'PROTECTED'
    options.author = false
    options.header = project.name
    options.links(["http://docs.oracle.com/javase/8/docs/api/"] as String[])
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
}

jar {
    manifest {
        attributes(
                "Specification-Title": project.name,
                "Specification-Version": "${majorVersion}.${minorVersion}",
                "Specification-Vendor": vendor,
                "Implementation-Title": project.name,
                "Implementation-Version": "${majorVersion}.${minorVersion}.${patchVersion}",
                "Implementation-Vendor": vendor,
                "Implementation-Vendor-Id": group
        )
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugs {
    sourceSets = [sourceSets.main]
}

build.dependsOn javadoc, jacocoTestReport

def getBranch() {
    return "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}

def getBuildType(branch) {
    switch (branch) {
        case ~/(master|version.*)/:
            return 'RELEASE'
        default:
            return 'SNAPSHOT'
    }
}

